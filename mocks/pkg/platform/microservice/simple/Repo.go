// Code generated by mockery v2.9.4. DO NOT EDIT.

package simple

import (
	k8s "github.com/dolittle/platform-api/pkg/dolittle/k8s"
	mock "github.com/stretchr/testify/mock"

	platform "github.com/dolittle/platform-api/pkg/platform"
)

// Repo is an autogenerated mock type for the Repo type
type Repo struct {
	mock.Mock
}

// Create provides a mock function with given fields: namespace, tenant, application, customerTenants, input
func (_m *Repo) Create(namespace string, tenant k8s.Tenant, application k8s.Application, customerTenants []platform.CustomerTenantInfo, input platform.HttpInputSimpleInfo) error {
	ret := _m.Called(namespace, tenant, application, customerTenants, input)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, k8s.Tenant, k8s.Application, []platform.CustomerTenantInfo, platform.HttpInputSimpleInfo) error); ok {
		r0 = rf(namespace, tenant, application, customerTenants, input)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Delete provides a mock function with given fields: applicationID, environment, microserviceID
func (_m *Repo) Delete(applicationID string, environment string, microserviceID string) error {
	ret := _m.Called(applicationID, environment, microserviceID)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string, string) error); ok {
		r0 = rf(applicationID, environment, microserviceID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
