// Code generated by mockery v2.14.0. DO NOT EDIT.

package platform

import (
	pkgplatform "github.com/dolittle/platform-api/pkg/platform"
	mock "github.com/stretchr/testify/mock"
)

// Microservice is an autogenerated mock type for the Microservice type
type Microservice struct {
	mock.Mock
}

// GetBase provides a mock function with given fields:
func (_m *Microservice) GetBase() pkgplatform.MicroserviceBase {
	ret := _m.Called()

	var r0 pkgplatform.MicroserviceBase
	if rf, ok := ret.Get(0).(func() pkgplatform.MicroserviceBase); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(pkgplatform.MicroserviceBase)
	}

	return r0
}

type mockConstructorTestingTNewMicroservice interface {
	mock.TestingT
	Cleanup(func())
}

// NewMicroservice creates a new instance of Microservice. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMicroservice(t mockConstructorTestingTNewMicroservice) *Microservice {
	mock := &Microservice{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
