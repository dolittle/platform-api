// Code generated by mockery v2.14.0. DO NOT EDIT.

package rawdatalog

import (
	pkgrawdatalog "github.com/dolittle/platform-api/pkg/rawdatalog"
	mock "github.com/stretchr/testify/mock"
)

// Repo is an autogenerated mock type for the Repo type
type Repo struct {
	mock.Mock
}

// Write provides a mock function with given fields: topic, moment
func (_m *Repo) Write(topic string, moment pkgrawdatalog.RawMoment) error {
	ret := _m.Called(topic, moment)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, pkgrawdatalog.RawMoment) error); ok {
		r0 = rf(topic, moment)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewRepo interface {
	mock.TestingT
	Cleanup(func())
}

// NewRepo creates a new instance of Repo. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRepo(t mockConstructorTestingTNewRepo) *Repo {
	mock := &Repo{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
