name: Release & Deploy

on:
  pull_request_target:
    types:
      - closed

jobs:
  setup:
    if: github.event.pull_request.merged == true
    name: Setup context
    runs-on: ubuntu-latest
    outputs:
      should-publish: ${{ steps.context.outputs.should-publish }}
      release-type: ${{ steps.context.outputs.release-type }}
      current-version: ${{ steps.context.outputs.current-version }}
      pr-body: ${{ steps.context.outputs.pr-body }}
      pr-url: ${{ steps.context.outputs.pr-url }}
      next-version: ${{ steps.increment-version.outputs.next-version }}
    steps:
      - uses: actions/checkout@v2

      - name: Establish context
        id: context
        uses: dolittle/establish-context-action@v2
        with:
          prerelease-branches: ${{ env.PRERELEASE_BRANCHES }}

      - name: Increment version
        id: increment-version
        uses: dolittle/increment-version-action@v2
        with:
          version: ${{ steps.context.outputs.current-version }}
          release-type: ${{ steps.context.outputs.release-type }}

  test:
    if: github.event.pull_request.merged == true
    name: Test & report coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-go@v2
        with:
          go-version: "1.16.3"

      - name: Install Code Climate
        working-directory: ${{ env.SOURCE_PATH }}
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-0.10.1-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter

      - name: Make output dir
        working-directory: ${{ env.SOURCE_PATH }}
        run: mkdir output

      - name: Build
        run: go build .

      - name: Run tests
        working-directory: ${{ env.SOURCE_PATH }}
        run: |
          go test ./... --coverprofile output/test-codecoverage.cov

      - name: Report code coverage to Code Climate
        working-directory: ${{ env.SOURCE_PATH }}
        run: |
          ./cc-test-reporter format-coverage output/test-codecoverage.cov -t gocov -o output/test-codecoverage-codeclimate.json -p github.com/dolittle/platform-api
          CC_TEST_REPORTER_ID=${{ secrets.CC_TEST_REPORTER_ID }} \
          GIT_BRANCH=${{ env.GITHUB_REF }} \
          GIT_COMMIT=${{ env.GITHUB_SHA }} \
          ./cc-test-reporter \
          upload-coverage -i output/test-codecoverage-codeclimate.json

  release:
    runs-on: ubuntu-latest
    needs:
      - setup
      - test
    if: needs.setup.outputs.should-publish == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions/setup-go@v2
        with:
          go-version: "1.16.3"

      - uses: docker/setup-buildx-action@v1

      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Production dolittle/platform-api Image to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          context: "."
          file: ./Dockerfile
          tags: dolittle/platform-api:${{ needs.setup.outputs.next-version }},dolittle/platform-api:latest

      - name: Push Production dolittle/platform-operations Image to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          context: "."
          file: ./Dockerfile.operations
          build-args: |
            BASE_IMAGE=dolittle/platform-api:${{ needs.setup.outputs.next-version }}
          tags: dolittle/platform-operations:${{ needs.setup.outputs.next-version }},dolittle/platform-operations:latest

      - name: Prepend to Changelog
        if: ${{ needs.setup.outputs.release-type != 'prerelease' }}
        uses: dolittle/add-to-changelog-action@v2
        with:
          version: ${{ needs.setup.outputs.next-version }}
          body: ${{ needs.setup.outputs.pr-body }}
          pr-url: ${{ needs.setup.outputs.pr-url }}
          changelog-path: CHANGELOG.md
          user-email: build@dolittle.com
          user-name: dolittle-build

      - name: Create GitHub Release
        uses: dolittle/github-release-action@v2
        with:
          version: ${{ needs.setup.outputs.next-version }}
          body: ${{ needs.setup.outputs.pr-body }}

  deploy-configmap-dev:
    needs: 
      - release
      - setup
    uses: ./.github/workflows/update-configmap-field.yml
    secrets: inherit
    with:
      environment: dev
      namespace: system-api
      name: dev-api-v1-env-variables
      field: JOBS_OPERATIONS_IMAGE
      value: dolittle/platform-operations:${{ needs.setup.outputs.next-version }}

  deploy-image-dev:
    uses: ./.github/workflows/update-container-image.yml
    secrets: inherit
    with:
      environment: dev
      namespace: system-api
      deployment: dev-api-v1
      value: dolittle/platform-operations:${{ needs.setup.outputs.next-version }}

  deploy-configmap-prod:
    needs: 
      - release
      - setup
    uses: ./.github/workflows/update-configmap-field.yml
    secrets: inherit
    with:
      environment: prod
      namespace: system-api
      name: prod-api-v1-env-variables
      field: JOBS_OPERATIONS_IMAGE
      value: dolittle/platform-operations:${{ needs.setup.outputs.next-version }}
    
  deploy-image-prod:
    uses: ./.github/workflows/update-container-image.yml
    secrets: inherit
    with:
      environment: prod
      namespace: system-api
      deployment: prod-api-v1
      value: dolittle/platform-operations:${{ needs.setup.outputs.next-version }}
